{"ast":null,"code":"var _jsxFileName = \"B:\\\\Documents\\\\Tutorials\\\\Python\\\\project1\\\\src\\\\App.js\";\nimport './App.css';\nimport CreatePhrase from './create_phrase';\nimport { Component, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  // const [initialData, setInitialData] = useState([{}])\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      posts: []\n    };\n  } // useEffect(()=> {\n  //   fetch('/api').then(\n  //     response => response.json()\n  //   ).then(data => setInitialData(data))\n  // }, []);\n\n\n  componentDidMount() {\n    // I will use fake api from jsonplaceholder website\n    // this return 100 posts \n    // fetch(\"/api\").then( response => response.json()).then(\n    //     // handle the result\n    //     (result) => {\n    //         this.setState({\n    //             isLoaded : true,\n    //             posts : result\n    //         });\n    //     },\n    //     // Handle error \n    //     (error) => {\n    //         this.setState({\n    //             isLoaded: true,\n    //             error\n    //         })\n    //     },\n    // )\n    useEffect(() => {\n      fetch('/api').then(response => response.json()).then(data => setInitialData(data));\n    }, []);\n  }\n\n  render() {\n    const {\n      data\n    } = this.state; // if(error){\n    //     return <div>Error in loading</div>\n    // }else if (!isLoaded) {\n    //     return <div>Loading ...</div>\n    // }else{\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          align: \"start\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 31\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 27\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this); // }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["B:/Documents/Tutorials/Python/project1/src/App.js"],"names":["CreatePhrase","Component","useState","useEffect","App","constructor","props","state","error","isLoaded","posts","componentDidMount","fetch","then","response","json","data","setInitialData","render","map","post","username","password","id"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACxB;AAEAI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,IADC;AAETC,MAAAA,QAAQ,EAAG,KAFF;AAGTC,MAAAA,KAAK,EAAG;AAHC,KAAb;AAKD,GAVuB,CAYxB;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAR,IAAAA,SAAS,CAAC,MAAK;AACbS,MAAAA,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CACEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADd,EAEEF,IAFF,CAEOG,IAAI,IAAIC,cAAc,CAACD,IAAD,CAF7B;AAGD,KAJQ,EAIN,EAJM,CAAT;AAKD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAACF,MAAAA;AAAD,QAAS,KAAKT,KAApB,CADO,CAGP;AACA;AACA;AACA;AACA;;AACI,wBACI;AAAA,6BACI;AAAA,kBAEIG,KAAK,CAACS,GAAN,CAAUC,IAAI,iBACV;AAAkB,UAAA,KAAK,EAAC,OAAxB;AAAA,iCACI;AAAA,oCACI;AAAA,wBAAIJ,IAAI,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAIL,IAAI,CAACM;AAAT;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,CARG,CAwBL;AACD;;AAtEqB;;AAyE5B,eAAenB,GAAf","sourcesContent":["import './App.css';\nimport CreatePhrase from './create_phrase'\nimport { Component, useState, useEffect } from 'react';\n\nclass App extends Component {\n    // const [initialData, setInitialData] = useState([{}])\n\n    constructor(props){\n      super(props);\n      this.state = {\n          error : null,\n          isLoaded : false,\n          posts : []        \n      };\n    }\n\n    // useEffect(()=> {\n    //   fetch('/api').then(\n    //     response => response.json()\n    //   ).then(data => setInitialData(data))\n    // }, []);\n\n    componentDidMount() {\n      // I will use fake api from jsonplaceholder website\n      // this return 100 posts \n      // fetch(\"/api\").then( response => response.json()).then(\n      //     // handle the result\n      //     (result) => {\n      //         this.setState({\n      //             isLoaded : true,\n      //             posts : result\n      //         });\n      //     },\n\n      //     // Handle error \n      //     (error) => {\n      //         this.setState({\n      //             isLoaded: true,\n      //             error\n      //         })\n      //     },\n      // )\n      useEffect(()=> {\n        fetch('/api').then(\n          response => response.json()\n        ).then(data => setInitialData(data))\n      }, []);\n    }\n\n    render() {\n      const {data} = this.state;\n\n      // if(error){\n      //     return <div>Error in loading</div>\n      // }else if (!isLoaded) {\n      //     return <div>Loading ...</div>\n      // }else{\n          return(\n              <div>\n                  <ol>\n                  {\n                      posts.map(post => (\n                          <li key={post.id} align=\"start\">\n                              <div>\n                                  <p>{data.username}</p>\n                                  <p>{data.password}</p>\n                              </div>\n                          </li>\n                      ))\n                  }\n                  </ol>\n              </div>\n          );\n        // }\n      }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}