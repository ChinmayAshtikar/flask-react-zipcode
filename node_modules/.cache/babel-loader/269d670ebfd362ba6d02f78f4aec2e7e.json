{"ast":null,"code":"var _jsxFileName = \"B:\\\\Documents\\\\Tutorials\\\\Python\\\\project1\\\\src\\\\App.js\";\nimport './App.css';\nimport CreatePhrase from './create_phrase';\nimport { Component, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  // const [initialData, setInitialData] = useState([{}])\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      posts: []\n    };\n  } // useEffect(()=> {\n  //   fetch('/api').then(\n  //     response => response.json()\n  //   ).then(data => setInitialData(data))\n  // }, []);\n\n\n  componentDidMount() {\n    // I will use fake api from jsonplaceholder website\n    // this return 100 posts \n    fetch(\"/api\").then(response => response.json()).then( // handle the result\n    result => {\n      this.setState({\n        isLoaded: true,\n        posts: result\n      });\n    }, // Handle error \n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      posts\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error in loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 18\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n            align: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 31\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["B:/Documents/Tutorials/Python/project1/src/App.js"],"names":["CreatePhrase","Component","useState","useEffect","App","constructor","props","state","error","isLoaded","posts","componentDidMount","fetch","then","response","json","result","setState","render","map","post","title","body","id"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACxB;AAEAI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,IADC;AAETC,MAAAA,QAAQ,EAAG,KAFF;AAGTC,MAAAA,KAAK,EAAG;AAHC,KAAb;AAKD,GAVuB,CAYxB;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACAC,IAAAA,KAAK,CAAC,MAAD,CAAL,CACCC,IADD,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,EAGI;AACCG,IAAAA,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAG,IADD;AAEVC,QAAAA,KAAK,EAAGM;AAFE,OAAd;AAIH,KATL,EAWI;AACCR,IAAAA,KAAD,IAAW;AACP,WAAKS,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAjBL;AAmBH;;AAECU,EAAAA,MAAM,GAAG;AACP,UAAM;AAACV,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAA2B,KAAKH,KAAtC;;AAEA,QAAGC,KAAH,EAAS;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEM,IAAI,CAACC,QAAL,EAAe;AACjB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFK,MAED;AACD,0BACI;AAAA,+BACI;AAAA,oBAEIC,KAAK,CAACS,GAAN,CAAUC,IAAI,iBACV;AAAkB,YAAA,KAAK,EAAC,OAAxB;AAAA,mCACI;AAAA,sCACI;AAAA,0BAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAgBD;AACF;;AAnEqB;;AAsE5B,eAAenB,GAAf","sourcesContent":["import './App.css';\nimport CreatePhrase from './create_phrase'\nimport { Component, useState, useEffect } from 'react';\n\nclass App extends Component {\n    // const [initialData, setInitialData] = useState([{}])\n\n    constructor(props){\n      super(props);\n      this.state = {\n          error : null,\n          isLoaded : false,\n          posts : []        \n      };\n    }\n\n    // useEffect(()=> {\n    //   fetch('/api').then(\n    //     response => response.json()\n    //   ).then(data => setInitialData(data))\n    // }, []);\n\n    componentDidMount() {\n      // I will use fake api from jsonplaceholder website\n      // this return 100 posts \n      fetch(\"/api\")\n      .then( response => response.json())\n      .then(\n          // handle the result\n          (result) => {\n              this.setState({\n                  isLoaded : true,\n                  posts : result\n              });\n          },\n\n          // Handle error \n          (error) => {\n              this.setState({\n                  isLoaded: true,\n                  error\n              })\n          },\n      )\n  }\n\n    render() {\n      const {error, isLoaded, posts} = this.state;\n\n      if(error){\n          return <div>Error in loading</div>\n      }else if (!isLoaded) {\n          return <div>Loading ...</div>\n      }else{\n          return(\n              <div>\n                  <ol>\n                  {\n                      posts.map(post => (\n                          <li key={post.id} align=\"start\">\n                              <div>\n                                  <p>{post.title}</p>\n                                  <p>{post.body}</p>\n                              </div>\n                          </li>\n                      ))\n                  }\n                  </ol>\n              </div>\n          );\n        }\n      }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}